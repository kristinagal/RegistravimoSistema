// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RegistravimoSistema;

#nullable disable

namespace RegistravimoSistema.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("RegistravimoSistema.Entities.Address", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ButoNumeris")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Gatve")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Miestas")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NamoNumeris")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<Guid>("PersonId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("PersonId")
                        .IsUnique();

                    b.ToTable("Addresses");

                    b.HasData(
                        new
                        {
                            Id = new Guid("9ed92855-07f3-4fe7-b49a-ab8101a1c9be"),
                            ButoNumeris = "101",
                            Gatve = "Gedimino pr.",
                            Miestas = "Vilnius",
                            NamoNumeris = "1",
                            PersonId = new Guid("b214935c-302f-468d-a977-f825e1af21f6")
                        });
                });

            modelBuilder.Entity("RegistravimoSistema.Entities.Person", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AsmensKodas")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)")
                        .HasComment("Format: 1YYMMDDXXXX");

                    b.Property<string>("ElPastas")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Pavarde")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<byte[]>("ProfilioNuotrauka")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("TelefonoNumeris")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)")
                        .HasComment("Starts with '8' or '+370'");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Vardas")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Persons");

                    b.HasData(
                        new
                        {
                            Id = new Guid("b214935c-302f-468d-a977-f825e1af21f6"),
                            AsmensKodas = "19901010001",
                            ElPastas = "admin@example.com",
                            Pavarde = "User",
                            ProfilioNuotrauka = new byte[0],
                            TelefonoNumeris = "+37060012345",
                            UserId = new Guid("f7ff97f2-06dd-43cf-89f0-624dbd6af84c"),
                            Vardas = "Admin"
                        });
                });

            modelBuilder.Entity("RegistravimoSistema.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("f7ff97f2-06dd-43cf-89f0-624dbd6af84c"),
                            PasswordHash = new byte[] { 200, 177, 199, 83, 204, 62, 130, 173, 199, 213, 122, 219, 41, 175, 85, 210, 219, 246, 64, 240, 120, 163, 130, 131, 248, 62, 143, 182, 39, 60, 212, 154, 13, 128, 129, 102, 217, 109, 34, 149, 86, 19, 110, 40, 143, 4, 46, 16, 38, 114, 167, 35, 239, 139, 144, 25, 84, 153, 83, 112, 37, 28, 16, 81 },
                            PasswordSalt = new byte[] { 54, 0, 190, 59, 21, 27, 119, 77, 5, 249, 239, 184, 219, 2, 244, 244 },
                            Role = "Admin",
                            Username = "Admin"
                        });
                });

            modelBuilder.Entity("RegistravimoSistema.Entities.Address", b =>
                {
                    b.HasOne("RegistravimoSistema.Entities.Person", "Person")
                        .WithOne("Address")
                        .HasForeignKey("RegistravimoSistema.Entities.Address", "PersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Person");
                });

            modelBuilder.Entity("RegistravimoSistema.Entities.Person", b =>
                {
                    b.HasOne("RegistravimoSistema.Entities.User", "User")
                        .WithMany("Persons")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("RegistravimoSistema.Entities.Person", b =>
                {
                    b.Navigation("Address")
                        .IsRequired();
                });

            modelBuilder.Entity("RegistravimoSistema.Entities.User", b =>
                {
                    b.Navigation("Persons");
                });
#pragma warning restore 612, 618
        }
    }
}
